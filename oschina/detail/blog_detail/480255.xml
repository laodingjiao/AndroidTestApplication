<?xml version="1.0" encoding="UTF-8"?><oschina>
	<blog>
								<id>480255</id>
		<title><![CDATA[android 图片压缩方法分析与学习]]></title>
		<url><![CDATA[http://my.oschina.net/u/2370693/blog/480255]]></url>
		<where><![CDATA[工作日志]]></where>
		<commentCount>0</commentCount>
		<body><![CDATA[<style type='text/css'>pre {white-space:pre-wrap;word-wrap:break-word;}</style><p>bitmap&nbsp;compress 是官方给出的图片质量压缩，通过试验学习了这个压缩的特性如下：</p> 
<ol> 
 <li><p>它是图片质量压缩，不会改变图片的分辨率</p></li> 
 <li><pre>bitmap.compress(Bitmap.CompressFormat.JPEG,&nbsp;option,&nbsp;bos);</pre><p>三个参数说明，1.图片压缩后的格式 2.图片压缩比例 3.压缩后得到的数据</p></li> 
 <li><p>这个方法会使图片压缩但是，由于是质量压缩，bitmap不会变小，也就是内存依然大，压缩的数据确实变小使用的时候得注意了内存溢出问题</p></li> 
</ol> 
<p>测试方法如下：</p> 
<pre>&nbsp;System.out.println("bitmap=="+bitmap.getByteCount());
ByteArrayOutputStream&nbsp;bos&nbsp;=&nbsp;new&nbsp;ByteArrayOutputStream();
//通过这里改变压缩类型，其有不同的结果
int&nbsp;option&nbsp;=&nbsp;100;
while&nbsp;(option&nbsp;&gt;&nbsp;0)
{
&nbsp;&nbsp;&nbsp;&nbsp;bitmap.compress(Bitmap.CompressFormat.JPEG,&nbsp;option,&nbsp;bos);
&nbsp;&nbsp;&nbsp;&nbsp;System.out.println("bos====="&nbsp;+&nbsp;bos.size());
&nbsp;&nbsp;&nbsp;&nbsp;option-=10;
&nbsp;&nbsp;&nbsp;&nbsp;bos.reset();
}

System.out.println("bitmap=="&nbsp;+&nbsp;bitmap.getByteCount());
bitmap.recycle();

ByteArrayInputStream&nbsp;bis&nbsp;=&nbsp;new&nbsp;ByteArrayInputStream(bos.toByteArray());
System.out.println("bis====="+bis.available());
bitmap&nbsp;=&nbsp;BitmapFactory.decodeStream(bis);
System.out.println("bitmap=="+bitmap.getByteCount());
imageView.setImageBitmap(bitmap);</pre> 
<p></p> 
<p>如果确实要节约内存</p> 
<p>就是用如下方法：</p> 
<pre class="best-text mb-10">ByteArrayOutputStream&nbsp;out&nbsp;=&nbsp;new&nbsp;ByteArrayOutputStream();
　　image.compress(Bitmap.CompressFormat.JPEG,&nbsp;100,&nbsp;out);
　　BitmapFactory.Options&nbsp;newOpts&nbsp;=&nbsp;&nbsp;new&nbsp;&nbsp;BitmapFactory.Options();
　　int&nbsp;be&nbsp;=&nbsp;2;//压缩比例，可以自己通过分辨率去计算需要的比例值
　　newOpts.inSampleSize&nbsp;=&nbsp;be;
　　ByteArrayInputStream&nbsp;isBm&nbsp;=&nbsp;&nbsp;new&nbsp;&nbsp;ByteArrayInputStream(out.toByteArray());
　　Bitmap&nbsp;bitmap&nbsp;=&nbsp;BitmapFactory.decodeStream(isBm,&nbsp;&nbsp;null&nbsp;,&nbsp;&nbsp;null&nbsp;);</pre> 
<p></p> 
<p><br></p>]]></body>
		<author><![CDATA[竹草席]]></author>
		<authorid>2370693</authorid>
		<documentType>1</documentType>
        <pubDate>2015-07-19 00:49:40</pubDate>
		<favorite>0</favorite>
			</blog>
</oschina>